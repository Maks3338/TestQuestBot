from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, ReplyKeyboardRemove, KeyboardButton
API_TOKEN: str = '5832385892:AAH8eD2FICY0fB0lhnNAnj4zoD9bHNzHgk8'
bot: Bot = Bot(token=API_TOKEN)
dp: Dispatcher = Dispatcher(bot)
keyboard: ReplyKeyboardMarkup = ReplyKeyboardMarkup()
button_1: KeyboardButton = KeyboardButton('–°–æ–±–∞–∫ ü¶Æ')
button_2: KeyboardButton = KeyboardButton('–û–≥—É—Ä—Ü–æ–≤ ü•í')
button_3: KeyboardButton = KeyboardButton('–ë–∞–Ω–∞–Ω–æ–≤ ÔÅÜ')
button_4: KeyboardButton = KeyboardButton('–õ—é–¥–µ–π')
button_5: KeyboardButton = KeyboardButton('–ú–∞—à–∏–Ω')
keyboard.add(button_1, button_2,button_3,button_4,button_5)
async def process_start_command(message: types.Message):
    await message.answer('–ß–µ–≥–æ –∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è –±–æ–ª—å—à–µ?', reply_markup=keyboard)
async def process_dog_answer(message: types.Message):
    await message.answer('–î–∞, –Ω–µ—Å–æ–º–Ω–µ–Ω–Ω–æ, –∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è —Å–æ–±–∞–∫. –ù–æ –≤—ã –≤–∏–¥–µ–ª–∏ –∫–∞–∫ –æ–Ω–∏ –±–æ—è—Ç—Å—è –æ–≥—É—Ä—Ü–æ–≤?', reply_markup=ReplyKeyboardRemove())
async def process_cucumber_answer(message: types.Message):
    await message.answer('–î–∞, –∏–Ω–æ–≥–¥–∞ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –æ–≥—É—Ä—Ü–æ–≤ –∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è –±–æ–ª—å—à–µ', reply_markup=ReplyKeyboardRemove())
async def process_banana_answer(message: types.Message):
    await message.answer('–ù–µ—Ç,–∫–æ—à–∫–∏ –≤–æ–æ–±—â–µ –Ω–µ –±–æ—è—Ç—Å—è –±–∞–Ω–∞–Ω–æ–≤. –ù–æ –≤—ã –≤–∏–¥–µ–ª–∏ –∫–∞–∫ –æ–Ω–∏ –±–æ—è—Ç—Å—è –æ–≥—É—Ä—Ü–æ–≤?', reply_markup=ReplyKeyboardRemove())
async def process_people_answer(message: types.Message):
    await message.answer('–î–∞, —Ö–æ—Ç—è —Å–º–æ—Ç—Ä—è –∫–∞–∫–æ–π —á–µ–ª–æ–≤–µ–∫. –ù–æ –≤—ã –≤–∏–¥–µ–ª–∏ –∫–∞–∫ –æ–Ω–∏ –±–æ—è—Ç—Å—è –æ–≥—É—Ä—Ü–æ–≤?', reply_markup=ReplyKeyboardRemove())
async def process_cars_answer(message: types.Message):
    await message.answer('–î–∞, –Ω–æ –æ—á–µ–Ω—å —Å–ª–∞–±–æ. –ù–æ –≤—ã –≤–∏–¥–µ–ª–∏ –∫–∞–∫ –æ–Ω–∏ –±–æ—è—Ç—Å—è –æ–≥—É—Ä—Ü–æ–≤?', reply_markup=ReplyKeyboardRemove())
dp.register_message_handler(process_start_command, commands='start')
dp.register_message_handler(process_dog_answer, text='–°–æ–±–∞–∫ ü¶Æ')
dp.register_message_handler(process_cucumber_answer, text='–û–≥—É—Ä—Ü–æ–≤ ü•í')
dp.register_message_handler(process_banana_answer, text='–ë–∞–Ω–∞–Ω–æ–≤ ÔÅÜ')
dp.register_message_handler(process_people_answer, text='–õ—é–¥–µ–π')
dp.register_message_handler(process_cars_answer, text='–ú–∞—à–∏–Ω')
if __name__ == '__main1__':
    executor.start_polling(dp, skip_updates=True)
